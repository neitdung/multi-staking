syntax = "proto3";
package multistaking.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/realiotech/multi-staking/x/multi-staking/types";

message MultiStakingLock {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  //   option (gogoproto.goproto_stringer) = false;

  string conversion_ratio = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string locked_amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string del_addr = 3;
  string val_addr = 4;
};

message ValidatorAllowedToken {
  string val_addr = 1;
  string token_denom = 2;
}

message MultiStakingUnlock {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // delegator_address is the bech32-encoded address of the delegator.
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // validator_address is the bech32-encoded address of the validator.
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated UnlockEntry entries = 3 [ (gogoproto.nullable) = false ];
}

message UnlockEntry {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  // creation_height is the height which the unbonding took place.
  int64 creation_height = 1;

  string conversion_ratio = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string balance = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message UnbonedMultiStakingRecord {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // validator_address is the bech32-encoded address of the validator.
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // creation_height is the height which the unbonding took place.
  int64 creation_height = 3;
  // completion_time is the unix time for unbonding completion.
  google.protobuf.Timestamp completion_time = 4
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];

  string conversion_ratio = 5 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string initial_balance = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string balance = 7 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}